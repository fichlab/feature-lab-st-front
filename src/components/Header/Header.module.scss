.header {
  position: fixed;
  z-index: 10;
  top: 0;
  left: 0;

  display: flex;
  flex-direction: column;
  align-items: center;

  width: 100%;

  transition: all 300ms ease-in;

  &_hidden {
    transform: translate3d(0, -120%, 0); // +20% to hide shadow of carousel menu when header hidden
  }
}

.headerContainer {
  width: 100%;
  max-width: 1920px;
  background: linear-gradient(0deg, #fff0 4.84%, #ffffff80 95.76%);
  transition: all 300ms ease-in;

  &_bg_white {
    background: var(--white, #fff);
    box-shadow: 0 20px 20px -13px rgb(0 45 99 / 30%);

    @media screen and (width <= 1280px) {
      box-shadow: 0 10px 20px 0 rgb(0 45 99 / 30%);
    }
  }

  @media screen and (width <= 768px) {
    background: var(--white, #fff);
  }
}

.content {
  display: flex;
  column-gap: 53px;
  align-items: center;
  justify-content: center;

  box-sizing: border-box;
  width: 100%;
  max-width: var(--el-max-width);
  margin: 0 auto;
  padding: 8px 0;

  @media screen and (width <= 1060px) {
    column-gap: 20px;
  }

  @media screen and (width <= 768px) {
    position: relative;
    z-index: 1;
    justify-content: space-between;
  }
}

.logo {
  display: block;

  width: 70px;
  height: 82px;
  margin: 0;
  padding: 0;

  @media screen and (width <= 1280px) {
    width: 52px;
    height: 61px;
  }

  @media screen and (width <= 768px) {
    width: 39px;
    height: auto;
  }
}

.nav {
  flex: 1;
  padding: 22px 48px;

  &Profile {
    border-color: var(--darkblue, #002d63);
    border-style: solid;
    border-width: 0 0 2px;
  }

  @media screen and (width <= 1280px) {
    padding: 22px 20px;
  }

  @media screen and (width <= 768px) {
    position: absolute;
    top: 10%;
    right: -1%;

    padding: 0;

    visibility: hidden;
    opacity: 0;
    border-color: var(--darkblue, #002d63);
    border-style: solid;
    border-width: 0 0 2px;
    border-radius: 2px;

    transition: all 200ms ease-in;
  }
}

.navMobileVisible {
  visibility: visible;
  opacity: 1;
}

.list {
  display: flex;
  flex: 1;
  align-items: center;
  justify-content: space-between;

  @media screen and (width <= 768px) {
    display: flex;
    flex-direction: column;
    gap: 20px;
    align-items: flex-start;
    justify-content: flex-start;

    min-width: 250px;
    padding: 53px 20px 28px;

    background: var(--white, #fff);
    box-shadow: var(--shadow-box-shadow, 0 10px 20px 0 rgb(0 45 99 / 30%));
  }
}

.listItem {
  position: relative;

  font-family: GostTypeB-Standard, sans-serif;
  font-size: 32px;
  line-height: 1.19; // 38px;
  color: var(--darkblue, #002d63);

  &:hover:not(:first-child):hover {
    // not the first child because the 1st listItem's submenu becomes much larger when hovered
    // it contains the Competencies subMenu when hovered
    background: var(
      --radialblue-45,
      radial-gradient(closest-side, rgb(3 64 137 / 45%) 0%, rgb(255 255 255 / 0%) 100%)
    );
  }

  @media screen and (width <= 1280px) {
    font-size: 24px;
    line-height: 1.17; // 28px;
  }

  @media screen and (width <= 1060px) {
    font-size: 19px;
  }

  @media screen and (width <= 768px) {
    font-size: 24px;
  }
}

.listItemSubMenu {
  @media screen and (width <= 768px) {
    display: flex;
    flex-direction: column;
    align-items: start;
  }
}

.btnSubmenuOpen {
  position: relative;
  z-index: 1;

  display: flex;
  align-items: center;
  justify-content: space-between;

  width: 100%;

  &:hover {
    background: var(
      --radialblue-45,
      radial-gradient(closest-side, rgb(3 64 137 / 45%) 0%, rgb(255 255 255 / 0%) 100%)
    );
  }
}

.arrow {
  display: none;

  &_rotate {
    transform-origin: center;
    transform: rotate(180deg);
  }

  @media screen and (width <= 768px) {
    display: block;
    transition: transform 0.3s ease;
  }
}

.link {
  &ToMainPage {
    display: none;
  }

  &Active {
    position: relative;
    z-index: 1;
    text-decoration: underline;
  }

  @media screen and (width <= 768px) {
    &ToMainPage {
      display: block;
    }
  }
}

/* Stop playing transition for menus momentarily on viewport resize. */
.stopTransition {
  transition: none !important;
}
